/// question 1 

PROCEDURE dot_product(v1,v2 : ARRAY_OF INTEGER, VAR dot : INTEGER)
VAR
    i : INTEGER;
BEGIN
    dot :=0;
    i:=0;
    IF (v1.length <> v2.length) THEN
        Write("we cannot calculat dot product");
        dot := NaN; 

    ELSE
       WHILE (i <v1.length ) DO
        dot := dot + v1[i]*v2[i];
        i:= i+1;
       END_WHILE
    END_IF
END




// question 2
ALGORITHM orth_vectors
VAR
    v1,v2 : ARRAY_OF INTEGER [50];
    dot : INTEGER;
    
BEGIN

    dot_product(v1,v2,dot);
    IF (dot = 0) THEN
        Write("V1 and V2 are orthogonal");
    ELSE
        Write("V1 and V2 are not orthogonal");
    END_IF
END

//  question 3

FUNCTION dot_product(v1,v2 : ARRAY_OF INTEGER) : INTEGER
VAR
    i, dot : INTEGER;
BEGIN
    dot :=0;
    i:=0;
    IF (v1.length <> v2.length) THEN
        Write("vectors with different sizes we cannot calculat dot product");
        RETURN NaN; // NaN : not definte number
    
    ELSE
    WHILE (i <v1.length ) DO
        dot := dot + v1[i]*v2[i];
        i:=i+1 ;
    END_WHILE
    END IF
    RETURN dot ;
END

ALGORITHM orth_vectors
VAR
    v1,v2 : ARRAY_OF INTEGER [50];
    dot : INTEGER;
BEGIN

    dot := dot_product(v1,v2);
    IF (dot = 0) THEN
        Write("V1 and V2 are orthogonal");
    ELSE
        Write("V1 and V2 are not orthogonal");
    END_IF
END